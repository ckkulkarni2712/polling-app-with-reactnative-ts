c0e15e2bff5a5f6ef012b0b34a3c7690
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var AnimatedValue = require("./AnimatedValue");
var AnimatedNode = require("./AnimatedNode");
var _require = require("../NativeAnimatedHelper"),
  generateNewAnimationId = _require.generateNewAnimationId,
  shouldUseNativeDriver = _require.shouldUseNativeDriver;
var AnimatedTracking = function (_AnimatedNode) {
  (0, _inherits2["default"])(AnimatedTracking, _AnimatedNode);
  var _super = _createSuper(AnimatedTracking);
  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    var _this;
    (0, _classCallCheck2["default"])(this, AnimatedTracking);
    _this = _super.call(this);
    _this._value = void 0;
    _this._parent = void 0;
    _this._callback = void 0;
    _this._animationConfig = void 0;
    _this._animationClass = void 0;
    _this._useNativeDriver = void 0;
    _this._value = value;
    _this._parent = parent;
    _this._animationClass = animationClass;
    _this._animationConfig = animationConfig;
    _this._useNativeDriver = shouldUseNativeDriver(animationConfig);
    _this._callback = callback;
    _this.__attach();
    return _this;
  }
  (0, _createClass2["default"])(AnimatedTracking, [{
    key: "__makeNative",
    value: function __makeNative(platformConfig) {
      this.__isNative = true;
      this._parent.__makeNative(platformConfig);
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(AnimatedTracking.prototype), "__makeNative", this).call(this, platformConfig);
      this._value.__makeNative(platformConfig);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._parent.__addChild(this);
      if (this._useNativeDriver) {
        var platformConfig = this._animationConfig.platformConfig;
        this.__makeNative(platformConfig);
      }
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._parent.__removeChild(this);
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(AnimatedTracking.prototype), "__detach", this).call(this);
    }
  }, {
    key: "update",
    value: function update() {
      this._value.animate(new this._animationClass(_objectSpread(_objectSpread({}, this._animationConfig), {}, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      var animation = new this._animationClass(_objectSpread(_objectSpread({}, this._animationConfig), {}, {
        toValue: undefined
      }));
      var animationConfig = animation.__getNativeAnimationConfig();
      return {
        type: 'tracking',
        animationId: generateNewAnimationId(),
        animationConfig: animationConfig,
        toValue: this._parent.__getNativeTag(),
        value: this._value.__getNativeTag()
      };
    }
  }]);
  return AnimatedTracking;
}(AnimatedNode);
module.exports = AnimatedTracking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmltYXRlZFZhbHVlIiwicmVxdWlyZSIsIkFuaW1hdGVkTm9kZSIsImdlbmVyYXRlTmV3QW5pbWF0aW9uSWQiLCJzaG91bGRVc2VOYXRpdmVEcml2ZXIiLCJBbmltYXRlZFRyYWNraW5nIiwidmFsdWUiLCJwYXJlbnQiLCJhbmltYXRpb25DbGFzcyIsImFuaW1hdGlvbkNvbmZpZyIsImNhbGxiYWNrIiwiX3ZhbHVlIiwiX3BhcmVudCIsIl9jYWxsYmFjayIsIl9hbmltYXRpb25Db25maWciLCJfYW5pbWF0aW9uQ2xhc3MiLCJfdXNlTmF0aXZlRHJpdmVyIiwiX19hdHRhY2giLCJwbGF0Zm9ybUNvbmZpZyIsIl9faXNOYXRpdmUiLCJfX21ha2VOYXRpdmUiLCJfX2dldFZhbHVlIiwiX19hZGRDaGlsZCIsIl9fcmVtb3ZlQ2hpbGQiLCJhbmltYXRlIiwidG9WYWx1ZSIsImFuaW1hdGlvbiIsInVuZGVmaW5lZCIsIl9fZ2V0TmF0aXZlQW5pbWF0aW9uQ29uZmlnIiwidHlwZSIsImFuaW1hdGlvbklkIiwiX19nZXROYXRpdmVUYWciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQW5pbWF0ZWRUcmFja2luZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFuaW1hdGVkVmFsdWUgPSByZXF1aXJlKCcuL0FuaW1hdGVkVmFsdWUnKTtcbmNvbnN0IEFuaW1hdGVkTm9kZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWROb2RlJyk7XG5jb25zdCB7XG4gIGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQsXG4gIHNob3VsZFVzZU5hdGl2ZURyaXZlcixcbn0gPSByZXF1aXJlKCcuLi9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5pbXBvcnQgdHlwZSB7UGxhdGZvcm1Db25maWd9IGZyb20gJy4uL0FuaW1hdGVkUGxhdGZvcm1Db25maWcnO1xuaW1wb3J0IHR5cGUge0VuZENhbGxiYWNrfSBmcm9tICcuLi9hbmltYXRpb25zL0FuaW1hdGlvbic7XG5cbmNsYXNzIEFuaW1hdGVkVHJhY2tpbmcgZXh0ZW5kcyBBbmltYXRlZE5vZGUge1xuICBfdmFsdWU6IEFuaW1hdGVkVmFsdWU7XG4gIF9wYXJlbnQ6IEFuaW1hdGVkTm9kZTtcbiAgX2NhbGxiYWNrOiA/RW5kQ2FsbGJhY2s7XG4gIF9hbmltYXRpb25Db25maWc6IE9iamVjdDtcbiAgX2FuaW1hdGlvbkNsYXNzOiBhbnk7XG4gIF91c2VOYXRpdmVEcml2ZXI6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgdmFsdWU6IEFuaW1hdGVkVmFsdWUsXG4gICAgcGFyZW50OiBBbmltYXRlZE5vZGUsXG4gICAgYW5pbWF0aW9uQ2xhc3M6IGFueSxcbiAgICBhbmltYXRpb25Db25maWc6IE9iamVjdCxcbiAgICBjYWxsYmFjaz86ID9FbmRDYWxsYmFjayxcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICAgIHRoaXMuX3BhcmVudCA9IHBhcmVudDtcbiAgICB0aGlzLl9hbmltYXRpb25DbGFzcyA9IGFuaW1hdGlvbkNsYXNzO1xuICAgIHRoaXMuX2FuaW1hdGlvbkNvbmZpZyA9IGFuaW1hdGlvbkNvbmZpZztcbiAgICB0aGlzLl91c2VOYXRpdmVEcml2ZXIgPSBzaG91bGRVc2VOYXRpdmVEcml2ZXIoYW5pbWF0aW9uQ29uZmlnKTtcbiAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIHRoaXMuX19hdHRhY2goKTtcbiAgfVxuXG4gIF9fbWFrZU5hdGl2ZShwbGF0Zm9ybUNvbmZpZzogP1BsYXRmb3JtQ29uZmlnKSB7XG4gICAgdGhpcy5fX2lzTmF0aXZlID0gdHJ1ZTtcbiAgICB0aGlzLl9wYXJlbnQuX19tYWtlTmF0aXZlKHBsYXRmb3JtQ29uZmlnKTtcbiAgICBzdXBlci5fX21ha2VOYXRpdmUocGxhdGZvcm1Db25maWcpO1xuICAgIHRoaXMuX3ZhbHVlLl9fbWFrZU5hdGl2ZShwbGF0Zm9ybUNvbmZpZyk7XG4gIH1cblxuICBfX2dldFZhbHVlKCk6IE9iamVjdCB7XG4gICAgcmV0dXJuIHRoaXMuX3BhcmVudC5fX2dldFZhbHVlKCk7XG4gIH1cblxuICBfX2F0dGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9wYXJlbnQuX19hZGRDaGlsZCh0aGlzKTtcbiAgICBpZiAodGhpcy5fdXNlTmF0aXZlRHJpdmVyKSB7XG4gICAgICAvLyB3aGVuIHRoZSB0cmFja2luZyBzdGFydHMgd2UgbmVlZCB0byBjb252ZXJ0IHRoaXMgbm9kZSB0byBhIFwibmF0aXZlIG5vZGVcIlxuICAgICAgLy8gc28gdGhhdCB0aGUgcGFyZW50IG5vZGUgd2lsbCBiZSBtYWRlIFwibmF0aXZlXCIgdG9vLiBUaGlzIGlzIG5lY2Vzc2FyeSBhc1xuICAgICAgLy8gaWYgd2UgZG9uJ3QgZG8gdGhpcyBgdXBkYXRlYCBtZXRob2Qgd2lsbCBnZXQgY2FsbGVkLiBBdCB0aGF0IHBvaW50IGl0XG4gICAgICAvLyBtYXkgYmUgdG9vIGxhdGUgYXMgaXQgd291bGQgbWVhbiB0aGUgSlMgZHJpdmVyIGhhcyBhbHJlYWR5IHN0YXJ0ZWRcbiAgICAgIC8vIHVwZGF0aW5nIG5vZGUgdmFsdWVzXG4gICAgICBsZXQge3BsYXRmb3JtQ29uZmlnfSA9IHRoaXMuX2FuaW1hdGlvbkNvbmZpZztcbiAgICAgIHRoaXMuX19tYWtlTmF0aXZlKHBsYXRmb3JtQ29uZmlnKTtcbiAgICB9XG4gIH1cblxuICBfX2RldGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9wYXJlbnQuX19yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICBzdXBlci5fX2RldGFjaCgpO1xuICB9XG5cbiAgdXBkYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuX3ZhbHVlLmFuaW1hdGUoXG4gICAgICBuZXcgdGhpcy5fYW5pbWF0aW9uQ2xhc3Moe1xuICAgICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAgIHRvVmFsdWU6ICh0aGlzLl9hbmltYXRpb25Db25maWcudG9WYWx1ZTogYW55KS5fX2dldFZhbHVlKCksXG4gICAgICB9KSxcbiAgICAgIHRoaXMuX2NhbGxiYWNrLFxuICAgICk7XG4gIH1cblxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBhbnkge1xuICAgIGNvbnN0IGFuaW1hdGlvbiA9IG5ldyB0aGlzLl9hbmltYXRpb25DbGFzcyh7XG4gICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAvLyByZW1vdmUgdG9WYWx1ZSBmcm9tIHRoZSBjb25maWcgYXMgaXQncyBhIHJlZiB0byBBbmltYXRlZC5WYWx1ZVxuICAgICAgdG9WYWx1ZTogdW5kZWZpbmVkLFxuICAgIH0pO1xuICAgIGNvbnN0IGFuaW1hdGlvbkNvbmZpZyA9IGFuaW1hdGlvbi5fX2dldE5hdGl2ZUFuaW1hdGlvbkNvbmZpZygpO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAndHJhY2tpbmcnLFxuICAgICAgYW5pbWF0aW9uSWQ6IGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQoKSxcbiAgICAgIGFuaW1hdGlvbkNvbmZpZyxcbiAgICAgIHRvVmFsdWU6IHRoaXMuX3BhcmVudC5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgdmFsdWU6IHRoaXMuX3ZhbHVlLl9fZ2V0TmF0aXZlVGFnKCksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFuaW1hdGVkVHJhY2tpbmc7XG4iXSwibWFwcGluZ3MiOiJBQVVBLFlBQVk7O0FBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFB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