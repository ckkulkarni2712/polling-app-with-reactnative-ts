84dd226aa5d47de71b04535f89235ad9
"use strict";

_getJestObj().mock('axios', function () {
  return {
    axios: function axios() {
      return {
        get: mockedAxios
      };
    }
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: function useNavigation() {
      return {
        navigate: mockedNavigation
      };
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
var _react = _interopRequireDefault(require("react"));
var _reactNativeTableComponent = require("react-native-table-component");
var _Base = _interopRequireDefault(require("../Base"));
var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));
var enzyme = _interopRequireWildcard(require("enzyme"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
enzyme.configure({
  adapter: new _enzymeAdapterReact["default"]()
});
var mockedAxios = jest.fn();
var mockedNavigation = jest.fn();
describe('Base', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = (0, enzyme.shallow)((0, _jsxRuntime.jsx)(_Base["default"], {}));
  });
  it('should render a table component', function () {
    expect(wrapper.find(_reactNativeTableComponent.Table)).toHaveLength(1);
  });
  it('should call navigation', function () {
    expect(mockedNavigation).toHaveBeenCalled();
  });
  it('should call axios', function () {
    expect(mockedAxios).toHaveBeenCalledWith("https://hn.algolia.com/api/v1/search_by_date?tags=story&page=0&hitsPerPage=3");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrIiwiYXhpb3MiLCJnZXQiLCJtb2NrZWRBeGlvcyIsInVzZU5hdmlnYXRpb24iLCJuYXZpZ2F0ZSIsIm1vY2tlZE5hdmlnYXRpb24iLCJlbnp5bWUiLCJjb25maWd1cmUiLCJhZGFwdGVyIiwiQWRhcHRlciIsImplc3QiLCJmbiIsImRlc2NyaWJlIiwid3JhcHBlciIsImJlZm9yZUVhY2giLCJzaGFsbG93IiwiaXQiLCJleHBlY3QiLCJmaW5kIiwiVGFibGUiLCJ0b0hhdmVMZW5ndGgiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiXSwic291cmNlcyI6WyJCYXNlLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgVGFibGUsIFJvdywgQ29sIH0gZnJvbSAncmVhY3QtbmF0aXZlLXRhYmxlLWNvbXBvbmVudCc7XHJcbmltcG9ydCBCYXNlIGZyb20gXCIuLi9CYXNlXCI7XHJcbmltcG9ydCBBZGFwdGVyIGZyb20gJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2JztcclxuaW1wb3J0ICogYXMgZW56eW1lIGZyb20gJ2VuenltZSc7XHJcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xyXG5pbXBvcnQgeyB1c2VOYXZpZ2F0aW9uIH0gZnJvbSBcIkByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZVwiO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcblxyXG5lbnp5bWUuY29uZmlndXJlKHsgYWRhcHRlcjogbmV3IEFkYXB0ZXIoKSB9KTtcclxuXHJcbmNvbnN0IG1vY2tlZEF4aW9zID0gamVzdC5mbigpO1xyXG5qZXN0Lm1vY2soJ2F4aW9zJywgKCkgPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYXhpb3M6ICgpID0+ICh7XHJcbiAgICAgICAgZ2V0OiBtb2NrZWRBeGlvcyxcclxuICAgICAgfSksXHJcbiAgICB9O1xyXG4gIH0pO1xyXG5cclxuY29uc3QgbW9ja2VkTmF2aWdhdGlvbiA9IGplc3QuZm4oKTtcclxuamVzdC5tb2NrKCdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnLCAoKSA9PiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB1c2VOYXZpZ2F0aW9uOiAoKSA9PiAoe1xyXG4gICAgICAgIG5hdmlnYXRlOiBtb2NrZWROYXZpZ2F0aW9uLFxyXG4gICAgICB9KSxcclxuICAgIH07XHJcbiAgfSk7XHJcblxyXG5kZXNjcmliZSgnQmFzZScsICgpID0+IHtcclxuICAgIGxldCB3cmFwcGVyOiBhbnk7XHJcbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgICAgICB3cmFwcGVyID0gc2hhbGxvdyg8QmFzZSAvPik7XHJcbiAgICB9KTtcclxuICAgIGl0KCdzaG91bGQgcmVuZGVyIGEgdGFibGUgY29tcG9uZW50JywgKCkgPT4ge1xyXG4gICAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoVGFibGUpKS50b0hhdmVMZW5ndGgoMSk7XHJcbiAgICB9KTtcclxuICAgIGl0KCdzaG91bGQgY2FsbCBuYXZpZ2F0aW9uJywgKCkgPT4ge1xyXG4gICAgICAgIGV4cGVjdChtb2NrZWROYXZpZ2F0aW9uKS50b0hhdmVCZWVuQ2FsbGVkKClcclxuICAgIH0pO1xyXG4gICAgaXQoJ3Nob3VsZCBjYWxsIGF4aW9zJywgKCkgPT4ge1xyXG4gICAgICAgIGV4cGVjdChtb2NrZWRBeGlvcykudG9IYXZlQmVlbkNhbGxlZFdpdGgoYGh0dHBzOi8vaG4uYWxnb2xpYS5jb20vYXBpL3YxL3NlYXJjaF9ieV9kYXRlP3RhZ3M9c3RvcnkmcGFnZT0wJmhpdHNQZXJQYWdlPTNgKVxyXG4gICAgfSk7XHJcblxyXG5cclxufSkiXSwibWFwcGluZ3MiOiI7O0FBWUEsY0FBS0EsSUFBSSxDQUFDLE9BQU8sRUFBRSxZQUFNO0VBQ3JCLE9BQU87SUFDTEMsS0FBSyxFQUFFO01BQUEsT0FBTztRQUNaQyxHQUFHLEVBQUVDO01BQ1AsQ0FBQztJQUFBO0VBQ0gsQ0FBQztBQUNILENBQUMsQ0FBQztBQUdKLGNBQUtILElBQUksQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0VBQ3hDLE9BQU87SUFDTEksYUFBYSxFQUFFO01BQUEsT0FBTztRQUNwQkMsUUFBUSxFQUFFQztNQUNaLENBQUM7SUFBQTtFQUNILENBQUM7QUFDSCxDQUFDLENBQUM7QUFBQztBQUFBO0FBM0JMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBaUM7QUFBQTtBQUFBO0FBQUE7RUFBQTtJQUFBO0VBQUE7SUFBQTtFQUFBO0VBQUE7QUFBQTtBQUtqQ0MsTUFBTSxDQUFDQyxTQUFTLENBQUM7RUFBRUMsT0FBTyxFQUFFLElBQUlDLDhCQUFPO0FBQUcsQ0FBQyxDQUFDO0FBRTVDLElBQU1QLFdBQVcsR0FBR1EsSUFBSSxDQUFDQyxFQUFFLEVBQUU7QUFTN0IsSUFBTU4sZ0JBQWdCLEdBQUdLLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0FBU2xDQyxRQUFRLENBQUMsTUFBTSxFQUFFLFlBQU07RUFDbkIsSUFBSUMsT0FBWTtFQUNoQkMsVUFBVSxDQUFDLFlBQU07SUFDYkQsT0FBTyxHQUFHLElBQUFFLGNBQU8sRUFBQyxxQkFBQyxnQkFBSSxLQUFHLENBQUM7RUFDL0IsQ0FBQyxDQUFDO0VBQ0ZDLEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRSxZQUFNO0lBQ3hDQyxNQUFNLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDQyxnQ0FBSyxDQUFDLENBQUMsQ0FBQ0MsWUFBWSxDQUFDLENBQUMsQ0FBQztFQUMvQyxDQUFDLENBQUM7RUFDRkosRUFBRSxDQUFDLHdCQUF3QixFQUFFLFlBQU07SUFDL0JDLE1BQU0sQ0FBQ1osZ0JBQWdCLENBQUMsQ0FBQ2dCLGdCQUFnQixFQUFFO0VBQy9DLENBQUMsQ0FBQztFQUNGTCxFQUFFLENBQUMsbUJBQW1CLEVBQUUsWUFBTTtJQUMxQkMsTUFBTSxDQUFDZixXQUFXLENBQUMsQ0FBQ29CLG9CQUFvQixnRkFBZ0Y7RUFDNUgsQ0FBQyxDQUFDO0FBR04sQ0FBQyxDQUFDIn0=