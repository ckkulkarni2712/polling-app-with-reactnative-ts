{"version":3,"names":["AnimatedValue","require","AnimatedValueXY","AnimatedInterpolation","Animation","SpringConfig","invariant","shouldUseNativeDriver","SpringAnimation","config","_overshootClamping","_restDisplacementThreshold","_restSpeedThreshold","_lastVelocity","_startPosition","_lastPosition","_fromValue","_toValue","_stiffness","_damping","_mass","_initialVelocity","_delay","_timeout","_startTime","_lastTime","_frameTime","_onUpdate","_animationFrame","_useNativeDriver","_platformConfig","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","toValue","delay","platformConfig","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","bounciness","speed","tension","friction","springConfig","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","type","initialVelocity","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","__onEnd","Date","now","internalState","getInternalState","lastPosition","lastVelocity","lastTime","start","__startNativeAnimation","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","requestAnimationFrame","bind","clearTimeout","global","cancelAnimationFrame","module","exports"],"sources":["SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedValue = require('../nodes/AnimatedValue');\nconst AnimatedValueXY = require('../nodes/AnimatedValueXY');\nconst AnimatedInterpolation = require('../nodes/AnimatedInterpolation');\nconst Animation = require('./Animation');\nconst SpringConfig = require('../SpringConfig');\n\nconst invariant = require('invariant');\n\nconst {shouldUseNativeDriver} = require('../NativeAnimatedHelper');\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nimport AnimatedColor from '../nodes/AnimatedColor';\n\nexport type SpringAnimationConfig = {\n  ...AnimationConfig,\n  toValue:\n    | number\n    | AnimatedValue\n    | {\n        x: number,\n        y: number,\n        ...\n      }\n    | AnimatedValueXY\n    | {\n        r: number,\n        g: number,\n        b: number,\n        a: number,\n        ...\n      }\n    | AnimatedColor\n    | AnimatedInterpolation<number>,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?:\n    | number\n    | {\n        x: number,\n        y: number,\n        ...\n      },\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nexport type SpringAnimationConfigSingle = {\n  ...AnimationConfig,\n  toValue: number,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?: number,\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nclass SpringAnimation extends Animation {\n  _overshootClamping: boolean;\n  _restDisplacementThreshold: number;\n  _restSpeedThreshold: number;\n  _lastVelocity: number;\n  _startPosition: number;\n  _lastPosition: number;\n  _fromValue: number;\n  _toValue: number;\n  _stiffness: number;\n  _damping: number;\n  _mass: number;\n  _initialVelocity: number;\n  _delay: number;\n  _timeout: any;\n  _startTime: number;\n  _lastTime: number;\n  _frameTime: number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _useNativeDriver: boolean;\n  _platformConfig: ?PlatformConfig;\n\n  constructor(config: SpringAnimationConfigSingle) {\n    super();\n\n    this._overshootClamping = config.overshootClamping ?? false;\n    this._restDisplacementThreshold = config.restDisplacementThreshold ?? 0.001;\n    this._restSpeedThreshold = config.restSpeedThreshold ?? 0.001;\n    this._initialVelocity = config.velocity ?? 0;\n    this._lastVelocity = config.velocity ?? 0;\n    this._toValue = config.toValue;\n    this._delay = config.delay ?? 0;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this._platformConfig = config.platformConfig;\n    this.__isInteraction = config.isInteraction ?? !this._useNativeDriver;\n    this.__iterations = config.iterations ?? 1;\n\n    if (\n      config.stiffness !== undefined ||\n      config.damping !== undefined ||\n      config.mass !== undefined\n    ) {\n      invariant(\n        config.bounciness === undefined &&\n          config.speed === undefined &&\n          config.tension === undefined &&\n          config.friction === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      this._stiffness = config.stiffness ?? 100;\n      this._damping = config.damping ?? 10;\n      this._mass = config.mass ?? 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(\n        config.tension === undefined &&\n          config.friction === undefined &&\n          config.stiffness === undefined &&\n          config.damping === undefined &&\n          config.mass === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\n        config.bounciness ?? 8,\n        config.speed ?? 12,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        config.tension ?? 40,\n        config.friction ?? 7,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    }\n\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n\n  __getNativeAnimationConfig(): {|\n    damping: number,\n    initialVelocity: number,\n    iterations: number,\n    mass: number,\n    platformConfig: ?PlatformConfig,\n    overshootClamping: boolean,\n    restDisplacementThreshold: number,\n    restSpeedThreshold: number,\n    stiffness: number,\n    toValue: any,\n    type: $TEMPORARY$string<'spring'>,\n  |} {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: this._initialVelocity ?? this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      const internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    const start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  getInternalState(): Object {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime,\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate(): void {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    const MAX_STEPS = 64;\n    let now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    const deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n\n    const c: number = this._damping;\n    const m: number = this._mass;\n    const k: number = this._stiffness;\n    const v0: number = -this._initialVelocity;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    let position = 0.0;\n    let velocity = 0.0;\n    const t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      position =\n        this._toValue -\n        envelope *\n          (((v0 + zeta * omega0 * x0) / omega1) * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          ((Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0)) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      position = this._toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    let isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    const isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    let isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement =\n        Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || (isVelocity && isDisplacement)) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n\nmodule.exports = SpringAnimation;\n"],"mappings":"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"}