{"version":3,"names":["Col","props","data","style","width","heightArr","flex","textStyle","map","item","i","height","Component","propTypes","PropTypes","number","object","Cols","widthArr","flexArr","sum","styles","cols","wth","StyleSheet","create","flexDirection"],"sources":["cols.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Cell } from './cell';\nimport { sum } from '../utils';\n\nexport class Col extends Component {\n  static propTypes = {\n    width: PropTypes.number,\n    style: PropTypes.object,\n    textStyle: PropTypes.object\n  };\n\n  render() {\n    const { data, style, width, heightArr, flex, textStyle, ...props } = this.props;\n\n    return data ? (\n      <View style={[width ? { width: width } : { flex: 1 }, flex && { flex: flex }, style]}>\n        {data.map((item, i) => {\n          const height = heightArr && heightArr[i];\n          return <Cell key={i} data={item} width={width} height={height} textStyle={textStyle} {...props} />;\n        })}\n      </View>\n    ) : null;\n  }\n}\n\nexport class Cols extends Component {\n  static propTypes = {\n    style: PropTypes.object,\n    textStyle: PropTypes.object\n  };\n\n  render() {\n    const { data, style, widthArr, heightArr, flexArr, textStyle, ...props } = this.props;\n    let width = widthArr ? sum(widthArr) : 0;\n\n    return data ? (\n      <View style={[styles.cols, width && { width }]}>\n        {data.map((item, i) => {\n          const flex = flexArr && flexArr[i];\n          const wth = widthArr && widthArr[i];\n          return (\n            <Col\n              key={i}\n              data={item}\n              width={wth}\n              heightArr={heightArr}\n              flex={flex}\n              style={style}\n              textStyle={textStyle}\n              {...props}\n            />\n          );\n        })}\n      </View>\n    ) : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  cols: { flexDirection: 'row' }\n});\n"],"mappings":"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"}